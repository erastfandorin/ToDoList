{"version":3,"sources":["webpack:///./templates/newNote.hbs","webpack:///./index.js"],"names":["Handlebars","module","exports","template","container","depth0","helpers","partials","data","alias1","lambda","alias2","escapeExpression","header","description","refs","openFormAddNote","document","querySelector","formAddNote","closeFormAddNote","notesList","addEventListener","classList","add","e","preventDefault","remove","note","currentTarget","elements","value","markuplist","templatesNewNote","insertAdjacentHTML","element","target","className","parentNode","removeChild","childNodes","textContent"],"mappings":"8EAAA,IAAIA,EAAa,EAAQ,QAEzBC,EAAOC,SAAWF,EAAoB,SAAKA,GAAYG,SAAS,CAAC,SAAW,CAAC,EAAE,YAAY,KAAO,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GACzI,IAAIC,EAAOL,EAAUM,OAAQC,EAAOP,EAAUQ,iBAEhD,MAAO,mTACHD,EAAOF,EAAkB,MAAVJ,EAAiBA,EAAOQ,OAASR,EAASA,IACzD,yCACAM,EAAOF,EAAkB,MAAVJ,EAAiBA,EAAOS,YAAcT,EAASA,IAC9D,qBACJ,SAAU,K,yDCVZ,0CAGMU,EAAO,CACXC,gBAAiBC,SAASC,cAAc,oBACxCC,YAAaF,SAASC,cAAc,gBACpCE,iBAAkBH,SAASC,cAAc,qBACzCG,UAAWJ,SAASC,cAAc,eAGpCH,EAAKC,gBAAgBM,iBAAiB,SACtC,WACEP,EAAKI,YAAYI,UAAUC,IAAI,sBAC/BT,EAAKC,gBAAgBO,UAAUC,IAAI,4BAGrCT,EAAKK,iBAAiBE,iBAAiB,SACvC,SAA0BG,GACxBA,EAAEC,iBACFX,EAAKI,YAAYI,UAAUI,OAAO,sBAClCZ,EAAKC,gBAAgBO,UAAUI,OAAO,4BAGxCZ,EAAKI,YAAYG,iBAAiB,UAClC,SAA4BG,GAC1BA,EAAEC,iBACF,IAAME,EAAO,CACXf,OAAQY,EAAEI,cAAcC,SAAS,GAAGC,MACpCjB,YAAaW,EAAEI,cAAcC,SAAS,GAAGC,OAErCC,EAAaC,IAAiBL,GAEpCb,EAAKM,UAAUa,mBAAmB,YAAaF,GAE/CP,EAAEI,cAAcC,SAAS,GAAGC,MAAQ,GACpCN,EAAEI,cAAcC,SAAS,GAAGC,MAAQ,GACpChB,EAAKI,YAAYI,UAAUI,OAAO,sBAClCZ,EAAKC,gBAAgBO,UAAUI,OAAO,4BAGxCZ,EAAKM,UAAUC,iBAAiB,SAChC,SAAoBG,GAClB,IAAIU,EAAUV,EAAEW,OACU,eAAtBD,EAAQE,WACVF,EAAQG,WAAWA,WAAWA,WAAWC,YACvCJ,EAAQG,WAAWA,eAKzBvB,EAAKM,UAAUC,iBAAiB,UAChC,SAAmBG,GACjB,IAAIU,EAAUV,EAAEW,OACqC,SAAjDD,EAAQG,WAAWE,WAAW,GAAGC,aACnCN,EAAQG,WAAWE,WAAW,GAAGC,YAAc,UAC/CN,EAAQG,WAAWA,WAAWA,WAAWE,WAAW,GAAGjB,UAAUI,OAC/D,uBAGFQ,EAAQG,WAAWE,WAAW,GAAGC,YAAc,OAC/CN,EAAQG,WAAWA,WAAWA,WAAWE,WAAW,GAAGjB,UAAUC,IAC/D,2B","file":"main.7301eecdd1f8a8dc5df0.js","sourcesContent":["var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var alias1=container.lambda, alias2=container.escapeExpression;\n\n  return \"<li class=\\\"note\\\">\\r\\n  <div class=\\\"noteBox\\\">\\r\\n    <label>\\r\\n      <i class=\\\"checkState\\\">Pending</i>\\r\\n      <input class=\\\"checkNote\\\" type=\\\"checkbox\\\">\\r\\n      <span class=\\\"checkNoteBox\\\"></span>\\r\\n    </label>\\r\\n    <button class=\\\"deleteNote\\\">&times</button>\\r\\n  </div>\\r\\n  <h3 class=\\\"noteHeader\\\">\"\n    + alias2(alias1((depth0 != null ? depth0.header : depth0), depth0))\n    + \"</h3>\\r\\n  <p class=\\\"noteDescription\\\">\"\n    + alias2(alias1((depth0 != null ? depth0.description : depth0), depth0))\n    + \"</p>\\r\\n</li>\\r\\n\";\n},\"useData\":true});","import './styles.css';\r\nimport templatesNewNote from './templates/newNote.hbs';\r\n\r\nconst refs = {\r\n  openFormAddNote: document.querySelector('.openFormAddNote'),\r\n  formAddNote: document.querySelector('.formAddNote'),\r\n  closeFormAddNote: document.querySelector('.closeFormAddNote'),\r\n  notesList: document.querySelector('.notesList'),\r\n};\r\n\r\nrefs.openFormAddNote.addEventListener('click', openFormAddNote);\r\nfunction openFormAddNote() {\r\n  refs.formAddNote.classList.add('formAddNoteVisible');\r\n  refs.openFormAddNote.classList.add('openFormAddNoteHidden');\r\n}\r\n\r\nrefs.closeFormAddNote.addEventListener('click', closeFormAddNote);\r\nfunction closeFormAddNote(e) {\r\n  e.preventDefault();\r\n  refs.formAddNote.classList.remove('formAddNoteVisible');\r\n  refs.openFormAddNote.classList.remove('openFormAddNoteHidden');\r\n}\r\n\r\nrefs.formAddNote.addEventListener('submit', addNoteToNotesList);\r\nfunction addNoteToNotesList(e) {\r\n  e.preventDefault();\r\n  const note = {\r\n    header: e.currentTarget.elements[0].value,\r\n    description: e.currentTarget.elements[1].value,\r\n  };\r\n  const markuplist = templatesNewNote(note);\r\n\r\n  refs.notesList.insertAdjacentHTML('beforeend', markuplist);\r\n\r\n  e.currentTarget.elements[0].value = '';\r\n  e.currentTarget.elements[1].value = '';\r\n  refs.formAddNote.classList.remove('formAddNoteVisible');\r\n  refs.openFormAddNote.classList.remove('openFormAddNoteHidden');\r\n}\r\n\r\nrefs.notesList.addEventListener('click', deleteNote);\r\nfunction deleteNote(e) {\r\n  let element = e.target;\r\n  if (element.className === 'deleteNote') {\r\n    element.parentNode.parentNode.parentNode.removeChild(\r\n      element.parentNode.parentNode,\r\n    );\r\n  }\r\n}\r\n\r\nrefs.notesList.addEventListener('change', checkNote);\r\nfunction checkNote(e) {\r\n  let element = e.target;\r\n  if (element.parentNode.childNodes[1].textContent === 'Done') {\r\n    element.parentNode.childNodes[1].textContent = 'Pending';\r\n    element.parentNode.parentNode.parentNode.childNodes[3].classList.remove(\r\n      'noteHeaderCheaked',\r\n    );\r\n  } else {\r\n    element.parentNode.childNodes[1].textContent = 'Done';\r\n    element.parentNode.parentNode.parentNode.childNodes[3].classList.add(\r\n      'noteHeaderCheaked',\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}